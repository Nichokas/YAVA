name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macos-latest

          - target: aarch64-apple-darwin
            os: macos-latest

          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install Cross-Compilation Dependencies (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Build Binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare Archive (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../yava-${{ matrix.target }}.tar.gz yava
          cd -

      - name: Prepare Archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../yava-${{ matrix.target }}.zip yava.exe
          cd -

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: yava-${{ matrix.target }}
          path: |
            yava-${{ matrix.target }}.tar.gz
            yava-${{ matrix.target }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            yava-*/yava-*.tar.gz
            yava-*/yava-*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}